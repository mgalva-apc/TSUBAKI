@model TSUBAKI.Models.ViewModel.BooksModel
@{
    ViewBag.Title = "ViewAppoint";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Booking Appointments List</h1>
<div>
    <span class="alert-success">@ViewBag.Message</span>
    <table class="table table-striped table-condensed table-hover">
        <thead>
            <tr>
                <th>Schedule ID</th>
                <th>Client Username</th>
                <th>Date</th>
                <th>Time Slot</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var i in Model.Schedules)
            {
                <tr>
                    <td>@Html.DisplayFor(m => i.ScheduleID)</td>
                    <td>@Html.DisplayFor(m => i.ClientUsername)</td>
                    <td>@Html.DisplayFor(m => i.ScheduleDate)</td>
                    <td>@Html.DisplayFor(m => i.ScheduleTimeslot)</td>
                    <td><a href="#" class="lnkEdit" data-scheduleID="@i.ScheduleID" data-login="@i.ClientUsername" data-month="@i.ScheduleDate" data-timeslot="@i.ScheduleTimeslot">Edit</a></td>
                </tr>
            }
        </tbody>
    </table>
</div>
<!-- The Modal -->
<div class="modal fade edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Appointment Schedule</h4>
                <button type="button" class="close close-modal" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    @* <input type="hidden" id="editSchedId" /> *@
                    <div class="form-group">
                        <label for="editSchedId">Schedule ID:</label>
                        <input type="text" class="form-control" id="editSchedId" readonly>
                    </div>
                    <div class="form-group">
                        <label for="editClientUsername">Username:</label>
                        <input type="text" class="form-control" id="editClientUsername" readonly>
                    </div>
                    <div class="form-group">
                        <label for="editScheduleDate">Month</label>
                        <input type="date" asp-format="{yyyy-MM-dd}"class="form-control" id="editScheduleDate">
                    </div>
                    <div class="form-group">
                        <label for="editTimeSlot">Time Slots</label>
                            <select name="TimeSlot" id="editTimeSlot">
                                <option value="9:30AM - 11:30 AM">9:30 AM - 11:30 AM</option>
                                <option value="11:30AM - 1:30PM">11:30 AM - 1:30 PM</option>
                                <option value="3:30PM - 5:30PM">3:30 PM - 5:30 PM</option>
                            </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close-modal" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveChanges">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Add JQuery links -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        var editModal = $(".edit-modal");
        var editSchedId = $("#editSchedId");
        var editClientUsername = $("#editClientUsername");
        var editScheduleDate = $("#editScheduleDate");
        var editTimeSlot = $("#editTimeSlot");

        // Click event for "Edit" links
        $(".lnkEdit").click(function () {
            var scheduleId = $(this).data("scheduleid");
            var userName = $(this).data("username");
            var schedDate = $(this).data("date");
            var schedTime = $(this).data("timeslot");

            // Populate the modal with user data
            editSchedId.val(scheduleId);
            editClientUsername.val(userName);
            editScheduleDate.val(schedDate);
            editTimeSlot.val(schedTime);

            // Show the modal
            editModal.modal("show");
        });

        // Click event for "Save Changes" button
        $("#saveChanges").click(function () {

            // Create a JavaScript object with the updated user data
            var schedData = {
                ScheduleID: editSchedId.val(),
                ClientUsername: editClientUsername.val(),
                ScheduleDate: editScheduleDate.val(),
                ScheduleTimeslot: editTimeSlot.val()
            };

            // Perform your update logic here (e.g., call an API or submit a form)
            // Make an AJAX request to your API endpoint to update user information
            $.ajax({
                type: "PUT", // Use the appropriate HTTP method (PUT, POST, etc.) for your API
                url: "/book/update", // Replace with your API endpoint URL (BEA NOTE: IDK WHAT TO CHANGE HERE)
                data: JSON.stringify(schedData),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    // Handle the API response as needed
                    console.log("Schedule updated successfully");
                    window.location.reload();
                },
                error: function (error) {
                    // Handle API error
                    console.error("Error updating schedule:", error);
                    window.location.reload();
                }
            });

            // Close the modal
            editModal.modal("hide");
        });

        // Click event for "Close" button
        $(".close-modal").click(function () {
            editModal.modal("hide");
        });
    });

    // Function to reload the user list
    function reloadAppointmentList() {
        $.ajax({
            type: "GET", // Use the appropriate HTTP method for fetching the user list
            url: "/book/viewappoint", // Replace with your API endpoint URL to fetch the user list
            success: function (data) {
                // Replace the user list container with the updated user list HTML
                appointmentListContainer.html(data);
            },
            error: function (error) {
                console.error("Error fetching appointment list:", error);
            }
        });
    }
</script>